Working on -  
Make it that a camp can only be a max of 5 days . 

TEST T&Cs to see if it works? 

ENV File Work needs done
,- Stripe api key a
- DB Key 
- Email and App passcode 
-  IP addresses of Fetchs how do we handle them as its not going to be always on localhost? (PRod/ localhost repo needed)

Remove console logs of JWT tokens Etc and user details

Apple PAY  / Google pay - can we get this - Yes but you need to setup Apple Pay and Google accounts - I think we leave this before LIVE 

DEV / TEST Site and Production REPO needed

-------------------------------------------------------------------------

DEV / TEST Site and Production REPO needed


(node:1312) [DEP0044] DeprecationWarning: The `util.isArray` API is deprecated. Please use `Array.isArray()` instead.

See what the above is abut??


-------------------
TODO LIST 


---- Andriod ---
Andriod Front end -- Admin +CRM  - Needs tested and some design on admin side
ANDROID FULL TEST - Date TIME picker and dropdown CHecks , some componets might not work .



FRONT END - if there is no discount it just has % so we need it to not appear or 0%
Things to tidy up , replace all buttons so that onPress is on the TouchableOpacity not the text + remove console.logs


Need a redirect if the user cancels Process of payment so doest enter details
ADD STRIPE API KEY TO PROCESS ENV UPDATE CODE 
API keys and MongoDB needs protected in env \

Test needed on Andriod to confirm that all modules work on Andriod/ ios / web - mainly the date picker
Andriod date time not sure if working or coded right , will need to test
Handlesubmit within createcamp is only tested in ios unsure about Andriod yet 


2.0 
Notifications
 unlimited specific amount of day prices for camps so not limited to 5days
--------





-----------------------

Knowledge of the app / Workings 

Stripe
NEED TO PUT KEYS IN ENV file , cant get it working at the min


Refunds can be processed on the Stripe Application - To be tested
We can implement refunds on the app but that could be a future feature / Release 
For now i think we could have it that the User can see previous Camps / Events within the last X days 
and then request a refund then the business would log in and see the nofication and go on the Stripe application and process
how do we tell the outcome - Notifications ?  


FORGET PASSWORD - How do we handle this ? 1. Gmail (via Nodemailer)
Free Tier: If you use your personal Gmail account to send emails via Nodemailer, it’s free for low volumes of email (e.g., personal use, small apps).
Limitations: Gmail has daily sending limits. For example:
Free Gmail accounts are limited to around 100–500 emails per day.
If you use Google Workspace (formerly G Suite), the limit increases, but it's still capped.
Important: Gmail is not suitable for large-scale email sending (like marketing or app notifications), as it’s meant for personal use. Overuse may result in temporary suspension of sending capabilities.




refunds


APPLE PAY SETUP - SO THIS WILL ONLY BE ABLE TO ACCESSed when we get a merchantID , We will first do card only as this is main form and also Dev Program is £99 and i was having issues getting this setup we will fix this in the future 

Merchant ID 
If your app is being built for a specific client and they will take over the app once it's live, you have a couple of options regarding the Apple Merchant ID:

You Keep Ownership, But Integrate with Their Stripe Account: If you continue to own and maintain the app on behalf of the client, you can keep your Apple Merchant ID and integrate with the client's Stripe account. In this scenario, the client provides you with their Stripe publishable key and other necessary credentials, and you update the Stripe configuration in your app accordingly.
Client Assumes Full Ownership: If the client will assume full ownership of the app, including the Apple Developer account and any related credentials, they will need to create their own Apple Merchant ID and integrate with their own Stripe account. Once they have their own credentials, they will need to update the Stripe configuration in the app before taking it live.
The approach you choose depends on the agreement with your client and how ownership and maintenance of the app are being structured. It's essential to clarify this with your client and determine the best course of action before deploying the app live.


publishableKey: This is your Stripe publishable key, which you get from your Stripe Dashboard. It's used to identify your account with Stripe and authenticate API requests from your app. This is required for integrating with Stripe.
merchantIdentifier: This is an identifier provided by Apple when you set up Apple Pay in your Stripe account. It's used to configure Apple Pay for your app. If you're not setting up Apple Pay, you can omit this property or set it to undefined.
urlScheme: This is a custom URL scheme for your app, which is used for deep linking and handling redirects. You can set this to a unique value for your app (e.g., your-app-name://), but it's optional unless you're setting up Apple Pay.



---
CREATE A CAMP - Admin ONLY



---

TESTING PAYMENTS 
GO LIVE CHECKLIST
https://docs.stripe.com/development/checklist

PAYMENT METHOD	SCENARIO	HOW TO TEST

Credit card	The card payment succeeds and doesn’t require authentication.	Fill out the credit card form using the credit card number 4242 4242 4242 4242 with any expiration, CVC, and postal code.
Credit card	The card payment requires authentication.	Fill out the credit card form using the credit card number 4000 0025 0000 3155 with any expiration, CVC, and postal code.
Credit card	The card is declined with a decline code like insufficient_funds.	Fill out the credit card form using the credit card number 4000 0000 0000 9995 with any expiration, CVC, and postal code.
Credit card	The UnionPay card has a variable length of 13-19 digits.	Fill out the credit card form using the credit card number 6205 500 0000 0000 0004 with any expiry date, CVC, and postal code.
